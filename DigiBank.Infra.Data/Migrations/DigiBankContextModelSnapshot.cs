// <auto-generated />
using System;
using DigiBank.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigiBank.Infra.Data.Migrations
{
    [DbContext(typeof(DigiBankContext))]
    partial class DigiBankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigiBank.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.ClientePerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<int>("PerfilId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PerfilId");

                    b.ToTable("ClientePerfil");
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.ContaCorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .IsFixedLength(true)
                        .HasMaxLength(8);

                    b.Property<decimal>("Saldo")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ContaCorrente");
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataExpira");

                    b.Property<string>("TokenKey")
                        .IsRequired()
                        .HasMaxLength(710);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoAutenticacao")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int>("ContaDestino");

                    b.Property<int>("ContaOrigem");

                    b.Property<DateTime>("DataTransacao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaDestino");

                    b.HasIndex("ContaOrigem");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.ClientePerfil", b =>
                {
                    b.HasOne("DigiBank.Domain.Entities.Cliente", "Cliente")
                        .WithMany("ClientePerfil")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DigiBank.Domain.Entities.Perfil", "Perfil")
                        .WithMany("ClientePerfil")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.ContaCorrente", b =>
                {
                    b.HasOne("DigiBank.Domain.Entities.Cliente", "Cliente")
                        .WithMany("ContaCorrente")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.Token", b =>
                {
                    b.HasOne("DigiBank.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Token")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DigiBank.Domain.Entities.Transacao", b =>
                {
                    b.HasOne("DigiBank.Domain.Entities.ContaCorrente", "ContaCorrenteDestino")
                        .WithMany("TransacaoContaDestino")
                        .HasForeignKey("ContaDestino")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DigiBank.Domain.Entities.ContaCorrente", "ContaCorrenteOrigem")
                        .WithMany("TransacaoContaOrigem")
                        .HasForeignKey("ContaOrigem")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
